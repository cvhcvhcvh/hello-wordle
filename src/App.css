*,
*::before,
*::after {
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
  padding: 0;
  margin: 0;
}

#screen {
  background-color: #111;
  display: flex;
  flex-direction: column;
  height: 100vh;
  margin: 0;
  font-size: clamp(0.5em, 2.5vmin, 1rem);
}

#game-container {
  width: 100%;
  max-width: 60vw;
  margin: 0 auto;
  height: 100vh;
  display: flex;
  flex-direction: column;
}

h1 {
  color: #fff;
  text-align: center;
  border-bottom: 1px solid grey;
  padding: 8px;
}

#keyboard {
  display: grid;
  grid-template-columns: repeat(20, minmax(auto, 1.25em));
  grid-auto-rows: 3.5em;
  gap: 7.25px;
  justify-content: center;
  margin-bottom: 1em;
  /*justify content for a grid container centers contents along the inline axis => (aka horizontally)
  */
}
/*
lookup repeat(20, minmax(auto, 1.25em) && grid-auto-rows
*/
/* 
lookup span 2
*/

.key {
  /* font-size: inherit; */
  grid-column: span 2;
  border: none;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: hsl(
    var(--hue, 200),
    var(--saturation, 1%),
    var(--lightness, 50%)
  );
  color: white;
  fill: white;
  text-transform: uppercase;
  border-radius: 0.25em;
  cursor: pointer;
  font-size: 0.8em;
  font-weight: bold;
  /* user-select: none; */
}
.key.large {
  grid-column: span 3;
}
.key > svg {
  height: 1.75em;
  width: 1.75em;
}
/* 
.key:hover,
.key:focus {
  --lightness: 60%;
} */

.key.wrong {
  --lightness: 20%;
}
.key.present {
  --hue: 50;
  --saturation: 51%;
}
.key.correct {
  --hue: 115;
  --saturation: 25%;
}

#grid {
  display: grid;
  justify-content: center;
  align-content: center;
  flex-grow: 1;
  grid-template-columns: repeat(5, 3.75em);
  grid-template-rows: repeat(6, 3.75em);
  gap: 0.35em;
  margin-bottom: 1em;
  margin-top: 1em;
}

.tile {
  font-size: 2em;
  color: white;
  border: 0.05em solid #3a3a3a;
  text-transform: uppercase;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;
  transition: 250ms linear;
}
.tile[data-state="active"] {
  animation: zoom-in-zoom-out 50ms ease;
  border-color: rgba(235, 235, 235, 0.432);
}
.tile[data-state="wrong"] {
  background-color: hsl(200, 1%, 20%);
  border: none;
}
.tile[data-state="present"] {
  background-color: hsl(50, 50%, 50%);
  border: none;
}
.tile[data-state="correct"] {
  background-color: hsl(115, 25%, 50%);
  border: none;
}

.tile.shake {
  animation: shake 250ms ease-in-out;
}
@keyframes zoom-in-zoom-out {
  0% {
    transform: scale(1, 1);
  }
  50% {
    transform: scale(1.25, 1.25);
  }
  100% {
    transform: scale(1, 1);
  }
}
@keyframes shake {
  10% {
    transform: translateX(-5%);
  }
  30% {
    transform: translateX(5%);
  }
  50% {
    transform: translateX(-7.5%);
  }
  70% {
    transform: translateX(7.5%);
  }
  90% {
    transform: translateX(-5%);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes dance {
  20% {
    transform: translateY(-50%);
  }
  40% {
    transform: translateY(5%);
  }
  60% {
    transform: translateY(-25%);
  }
  80% {
    transform: translateY(2.5%);
  }
  90% {
    transform: translateY(-5%);
  }
  100% {
    transform: translateY(0);
  }
}

.tile.flip {
  transform: rotateX(90deg);
}

.tile.dance {
  animation: dance 500ms ease-in-out;
}

.alert-container {
  position: fixed;
  top: 12vh;
  left: 50vw;
  transform: translateX(-50%);
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.alert {
  font-weight: bold;
  pointer-events: none;
  background-color: #fff;
  padding: 1em;
  border-radius: 0.25em;
  opacity: 1;
  transition: opacity 500ms ease-in-out;
  /* look up this ^ */
  margin-bottom: 0.5em;
}

.alert:last-child {
  margin-bottom: 0;
}

.alert.hide {
  opacity: 0;
}
